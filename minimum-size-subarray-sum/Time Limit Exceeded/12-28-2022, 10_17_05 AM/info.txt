{"id":866724359,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1672202825,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/866724359/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int k, vector<int>& nums) {\n    int n = nums.size();\n    if (n == 0)\n        return 0;\n    int ans = INT_MAX;\n    vector<int> sums(n);\n    sums[0] = nums[0];\n    for (int i = 1; i < n; i++)\n        sums[i] = sums[i - 1] + nums[i];\n    for (int i = 0; i < n; i++) {\n        for (int j = i; j < n; j++) {\n            int sum = sums[j] - sums[i] + nums[i];\n            if (sum >= k) {\n                ans = min(ans, (j - i + 1));\n                break; //Found the smallest subarray with sum>=s starting with index i, hence move to next index\n            }\n        }\n    }\n    return (ans != INT_MAX) ? ans : 0;\n    }\n};","compare_result":"11111111111111111100","title_slug":"minimum-size-subarray-sum","has_notes":false}