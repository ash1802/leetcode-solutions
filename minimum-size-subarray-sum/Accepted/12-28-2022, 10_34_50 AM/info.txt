{"id":866732474,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1672203890,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/866732474/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"28.3 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int k, vector<int>& nums) {\n        int minLen = nums.size() +1;\n        int sum = 0;\n        int left = 0;\n        for (int right = 0; right < nums.size(); right++)\n        {\n            sum += nums[right];\n            while (sum >= k && left <=right)\n            {\n                minLen = min(minLen, right -left + 1);\n                sum -= nums[left++];\n            }   \n        }\n        return minLen == nums.size() + 1 ? 0 : minLen;\n    }\n};","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false}