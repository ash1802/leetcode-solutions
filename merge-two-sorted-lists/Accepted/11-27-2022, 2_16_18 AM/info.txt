{"id":850296963,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1669495578,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/850296963/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode *head1 = list1;\n        ListNode *head2 = list2;\n        ListNode *head3 = new ListNode(-1);\n        ListNode *tail3 = head3;\n\n        if(list1 == NULL) return list2;\n        if(list2 == NULL) return list1;\n\n        while(head1 != NULL && head2 != NULL) {\n            if(head1->val < head2->val) {\n                tail3->next = head1;\n                tail3 = head1;\n                head1 = head1->next;\n            }\n\n            else {\n                tail3->next = head2;\n                tail3 = head2;\n                head2 = head2->next;\n            }\n        }\n\n        while(head1 != NULL) {\n            tail3->next = head1;\n            tail3 = head1;\n            head1 = head1->next;\n        }\n\n        while(head2 != NULL) {\n            tail3->next = head2;\n            tail3 = head2;\n            head2 = head2->next;\n        }\n\n        head3 = head3->next;\n        return head3;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}