{"id":892519109,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1675671766,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/892519109/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"32.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* maxVal(TreeNode* root) {\n        TreeNode* temp = root;\n        while(temp->right) temp = temp->right;\n        return temp;\n    }\n\n    TreeNode* deleteNode(TreeNode* root, int val) {\n        if(root == NULL) return NULL;\n        if(root->val == val) {\n            // zero child case\n            if(root->left == NULL && root->right == NULL) {\n                delete root;\n                return NULL;\n            }\n\n            // one child case\n            if(root->left && root->right == NULL) {\n                TreeNode* temp = root->left;\n                delete root;\n                return temp;\n            }\n\n            if(root->right && root->left == NULL) {\n                TreeNode* temp = root->right;\n                delete root;\n                return temp;\n            }\n\n            // two children case\n            if(root->left && root->right) {\n                // max from left sub-tree (find in-order predecessor)\n                // min from right sub-tree (find in-order successor)\n                int maxi = maxVal(root->left)->val;\n                root->val = maxi;\n                root->left = deleteNode(root->left,maxi);\n            }\n        }  \n\n        else if(root->val > val) {\n            root->left = deleteNode(root->left, val);\n            return root;\n        }\n\n        root->right = deleteNode(root->right, val);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false}