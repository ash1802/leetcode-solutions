{"id":888620005,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1675151862,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/888620005/","is_pending":"Not Pending","title":"All O`one Data Structure","memory":"N/A","code":"class AllOne {\n    unordered_map<string, int> mp;\npublic:\n    AllOne() {\n        \n    }\n    \n    void inc(string key) {\n        mp[key]++;\n    }\n    \n    void dec(string key) {\n        if(mp[key] == 0) mp.erase(key);\n        mp[key]--;\n    }\n    \n    string getMaxKey() {\n        if(mp.empty()) return \"\";\n\n        int maxi = INT_MIN;\n        string ans = \"\";\n        for(auto it : mp) {\n            if(it.second > maxi) {\n                maxi = it.second;\n                ans = it.first;\n            }\n        }\n        return ans;\n    }\n    \n    string getMinKey() {\n        if(mp.empty()) return \"\";\n\n        int mini = INT_MAX;\n        string ans = \"\";\n        for(auto it : mp) {\n            if(it.second < mini) {\n                mini = it.second;\n                ans = it.first;\n            }\n        }\n        return ans;   \n    }\n};\n\n/**\n * Your AllOne object will be instantiated and called as such:\n * AllOne* obj = new AllOne();\n * obj->inc(key);\n * obj->dec(key);\n * string param_3 = obj->getMaxKey();\n * string param_4 = obj->getMinKey();\n */","compare_result":"11111101110110000","title_slug":"all-oone-data-structure","has_notes":false}