{"id":889128876,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1675219403,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/889128876/","is_pending":"Not Pending","title":"Subsets II","memory":"7.8 MB","code":"class Solution {\npublic:\n    void solve(vector<int>& nums, vector<vector<int>>& ans, int index, vector<int> ds) {\n        ans.push_back(ds);\n        // try each possible element from current index to end\n        for(int j=index; j<nums.size(); j++) {\n            // if the current element is repeating then no need to consider\n            if(j > index && nums[j] == nums[j-1]) continue;\n\n            // push into ds and call for next answer\n            ds.push_back(nums[j]);\n            solve(nums,ans,j+1,ds);\n\n            // pop when going out of current call\n            ds.pop_back();\n        }\n    }\n    \n    vector<vector<int>> subsetsWithDup(vector<int>& nums) {\n        vector<vector<int>> ans;\n        vector<int> ds;\n        sort(nums.begin(), nums.end());\n        solve(nums,ans,0,ds);\n        return ans;\n    }\n};","compare_result":"11111111111111111111","title_slug":"subsets-ii","has_notes":false}