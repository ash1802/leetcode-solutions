{"id":917367925,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1679138162,"status":10,"status_display":"Accepted","runtime":"271 ms","url":"/submissions/detail/917367925/","is_pending":"Not Pending","title":"Design Browser History","memory":"122.5 MB","code":"class BrowserHistory {\npublic:\n    stack<string> history;\n    stack<string> future;\n\t\n    BrowserHistory(string homepage) {\n        history.push(homepage);\n        future = stack<string>();           // Reset the forward stack.\n    }\n    \n    void visit(string url) {\n        history.push(url);\n        future = stack<string>();           // Reset the forward stack.\n    }\n    \n    string back(int steps) {\n        while(steps > 0 && history.size() > 1) { // Always keep at least one element in the stack. \n            future.push(history.top());\n            history.pop();\n            steps--;\n        }\n        return history.top();\n    }\n    \n    string forward(int steps) {\n        while(steps > 0 && future.size() > 0) {\n            history.push(future.top());\n            future.pop();\n            steps--;\n        }\n        return history.top();\n    }\n};\n\n/**\n * Your BrowserHistory object will be instantiated and called as such:\n * BrowserHistory* obj = new BrowserHistory(homepage);\n * obj->visit(url);\n * string param_2 = obj->back(steps);\n * string param_3 = obj->forward(steps);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-browser-history","has_notes":false}