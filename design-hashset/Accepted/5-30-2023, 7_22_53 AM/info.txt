{"id":959935636,"lang":"cpp","lang_name":"C++","time":"3 days, 14 hours","timestamp":1685411573,"status":10,"status_display":"Accepted","runtime":"743 ms","url":"/submissions/detail/959935636/","is_pending":"Not Pending","title":"Design HashSet","memory":"39.2 MB","code":"class MyHashSet {\n    vector<int> set;\npublic:\n    MyHashSet() {}\n    \n    void add(int key) {\n        if(!contains(key)) {\n            set.push_back(key);\n        }\n    }\n    \n    void remove(int key) {\n        for(int i=0; i<set.size(); i++) {\n            if(key == set[i]) {\n                set.erase(set.begin() + i);\n            }\n        }\n    }\n    \n    bool contains(int key) {\n        for(int i=0; i<set.size(); i++) {\n            if(key == set[i]) return true;\n        }\n        return false;\n    }\n};\n\n/**\n * Your MyHashSet object will be instantiated and called as such:\n * MyHashSet* obj = new MyHashSet();\n * obj->add(key);\n * obj->remove(key);\n * bool param_3 = obj->contains(key);\n */","compare_result":"111111111111111111111111111111111","title_slug":"design-hashset","has_notes":false}