{"id":881822277,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674220731,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/881822277/","is_pending":"Not Pending","title":"Insert Delete GetRandom O(1)","memory":"N/A","code":"class RandomizedSet {\n    int size;\n    unordered_map<int, bool> mp;\npublic:\n    RandomizedSet() {\n        size = 0;\n    }\n    \n    bool insert(int val) {\n        if(mp[val]) return false;\n        size++;\n        mp[val] = true;\n        return true;\n    }\n    \n    bool remove(int val) {\n        if(mp.find(val) == mp.end() || mp[val] == false) return false;\n\n        mp[val] = false;\n        return true;\n    }\n    \n    int getRandom() {\n        if(size == 0) return INT_MAX;\n\n        vector<int> ans;\n\n        for(auto it : mp) ans.push_back(it.first);\n\n        int random = rand() % (size-1);\n        return ans[random];\n    }\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet* obj = new RandomizedSet();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */","compare_result":"1000000000000000000","title_slug":"insert-delete-getrandom-o1","has_notes":false}