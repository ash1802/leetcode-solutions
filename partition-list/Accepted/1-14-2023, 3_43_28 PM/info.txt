{"id":877937751,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1673691208,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/877937751/","is_pending":"Not Pending","title":"Partition List","memory":"10.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        ListNode *newHead = new ListNode(-1);\n        ListNode *tail = newHead;\n\n        ListNode *temp = head;\n        queue<int> less, more;\n\n        while(temp != NULL) {\n            if(temp->val < x) less.push(temp->val);\n            else more.push(temp->val);\n            temp = temp->next;\n        }\n\n        while(!less.empty()) {\n            int front = less.front();\n            less.pop();\n            ListNode *node = new ListNode(front);\n            tail->next = node;\n            tail = node;\n        }\n\n        while(!more.empty()) {\n            int front = more.front();\n            more.pop();\n            ListNode *node = new ListNode(front);\n            tail->next = node;\n            tail = node;\n        }\n\n        newHead = newHead->next;\n        return newHead;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false}