{"id":858703066,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1670860779,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/858703066/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode *slow = head;\n        ListNode *fast = head;\n\n        if(head == NULL) return false;\n        \n        while(slow != NULL && fast != NULL && fast->next != NULL) {\n            slow = slow->next;\n            fast = fast->next->next;\n            if(slow == fast) return true;\n        }\n\n        return false;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false}