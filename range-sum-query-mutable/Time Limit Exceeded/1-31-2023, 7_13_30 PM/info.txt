{"id":888764090,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1675172610,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/888764090/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"N/A","code":"class NumArray {\n    vector<int> arr;\n    vector<int> prefix;\n    int size;\npublic:\n    NumArray(vector<int>& nums) {\n        for(int num : nums) arr.push_back(num);\n        size = arr.size();\n        prefix.push_back(arr[0]);\n        for(int i=1; i<size; i++) {\n            prefix.push_back(prefix[i-1] + arr[i]);\n        }\n    }\n    \n    void update(int index, int val) {\n        arr[index] = val;\n        prefix[0] = arr[0];\n        for(int i=1; i<size; i++) {\n            prefix[i] = prefix[i-1] + arr[i];\n        }\n    }\n    \n    int sumRange(int left, int right) {\n        if(left == 0) return prefix[right];\n        int sum = prefix[right] - prefix[left-1];\n        return sum;\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * obj->update(index,val);\n * int param_2 = obj->sumRange(left,right);\n */","compare_result":"1111111110000000","title_slug":"range-sum-query-mutable","has_notes":false}