{"id":886819987,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1674909318,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/886819987/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"89.3 MB","code":"class Solution {\npublic:\n    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {\n        int m = nums1.size();\n        int n = nums2.size();\n\n        if(m>n)\n            return findMedianSortedArrays(nums2,nums1);\n        \n        int low = 0;\n        int high = m;\n        int medianPos=((m+n)+1)/2;\n\n        while(low<=high) {\n            int cut1 = (low+high)>>1;\n            int cut2 = medianPos - cut1;\n            \n            int l1 = (cut1 == 0) ? INT_MIN : nums1[cut1-1];\n            int l2 = (cut2 == 0) ? INT_MIN : nums2[cut2-1];\n            int r1 = (cut1 == m) ? INT_MAX : nums1[cut1];\n            int r2 = (cut2 == n) ? INT_MAX : nums2[cut2];\n            \n            if(l1<=r2 && l2<=r1) {\n                if((m+n)%2 != 0)\n                    return max(l1,l2);\n                else \n                    return (max(l1,l2)+min(r1,r2))/2.0;\n            }\n\n            else if(l1>r2) high = cut1-1;\n            else low = cut1+1;\n        }\n\n        return 0.0;\n    }\n};","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false}