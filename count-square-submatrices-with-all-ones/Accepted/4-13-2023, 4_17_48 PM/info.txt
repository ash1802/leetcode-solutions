{"id":933016723,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1681382868,"status":10,"status_display":"Accepted","runtime":"81 ms","url":"/submissions/detail/933016723/","is_pending":"Not Pending","title":"Count Square Submatrices with All Ones","memory":"26.3 MB","code":"class Solution {\npublic:\n    int countSquares(vector<vector<int>>& matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n\n        vector<vector<int>> dp(n, vector<int>(m, 0));\n\n        for(int j=0; j<m; j++) dp[0][j] = matrix[0][j];\n        for(int i=0; i<n; i++) dp[i][0] = matrix[i][0];\n\n        for(int i=1; i<n; i++) {\n            for(int j=1; j<m; j++) {\n                if(matrix[i][j] == 0) dp[i][j] = 0;\n                else {\n                    dp[i][j] = 1 + min(dp[i-1][j], min(dp[i][j-1], dp[i-1][j-1]));\n                }\n            }\n        }\n\n        int sum = 0;\n        for(int i=0; i<n; i++) {\n            for(int j=0; j<m; j++) {\n                sum += dp[i][j];\n            }\n        }\n\n        return sum;\n    } \n};","compare_result":"11111111111111111111111111111111","title_slug":"count-square-submatrices-with-all-ones","has_notes":false}