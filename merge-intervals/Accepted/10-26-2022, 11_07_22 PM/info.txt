{"id":830867228,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1666805842,"status":10,"status_display":"Accepted","runtime":"103 ms","url":"/submissions/detail/830867228/","is_pending":"Not Pending","title":"Merge Intervals","memory":"23.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        sort(intervals.begin(), intervals.end());\n    int n = intervals.size();\n    vector<vector<int>> ans;\n    stack<vector<int>> st;\n\n    st.push(intervals[0]);\n\n    int k = 0;\n    for (int i = 1; i < n; i++)\n    {\n        vector<int> curr = st.top();\n        st.pop();\n\n        vector<int> temp(2);\n        if (curr[1] >= intervals[i][0])\n        {\n            temp[0] = min(intervals[i][0], curr[0]);\n            temp[1] = max(intervals[i][1], curr[1]);\n        }\n        else\n        {\n            st.push(curr);\n            temp[0] = intervals[i][0];\n            temp[1] = intervals[i][1];\n        }\n        st.push(temp);\n    }\n    \n    while (!st.empty())\n    {\n        ans.push_back(st.top());\n        st.pop();\n    }\n\n    sort(ans.begin(), ans.end());\n    return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false}