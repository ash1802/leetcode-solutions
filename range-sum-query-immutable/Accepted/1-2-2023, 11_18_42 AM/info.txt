{"id":869483173,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1672638522,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/869483173/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"17.2 MB","code":"class NumArray {\n    vector<int> arr;\n    vector<int> prefix;\n\n    int size;\npublic:\n    NumArray(vector<int>& nums) {\n        for(int num : nums) arr.push_back(num);\n        size = arr.size();\n\n        prefix.push_back(arr[0]);\n        for(int i=1; i<size; i++) {\n            prefix.push_back(prefix[i-1] + arr[i]);\n        }\n    }\n    \n    int sumRange(int left, int right) {\n        if(left == 0) return prefix[right];\n        int sum = prefix[right] - prefix[left-1];\n        return sum;\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * int param_1 = obj->sumRange(left,right);\n */","compare_result":"111111111111111","title_slug":"range-sum-query-immutable","has_notes":false}