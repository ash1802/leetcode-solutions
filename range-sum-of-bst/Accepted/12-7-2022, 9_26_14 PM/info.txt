{"id":856177401,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1670428574,"status":10,"status_display":"Accepted","runtime":"318 ms","url":"/submissions/detail/856177401/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"67.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root, vector<int>& ans) {\n        if(root == NULL) return;\n        inorder(root->left, ans);\n        ans.push_back(root->val);\n        inorder(root->right, ans);\n    }\n\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        vector<int> inor;\n        inorder(root,inor);\n\n        int li = lower_bound(inor.begin(), inor.end(), low) - inor.begin();\n        int hi = lower_bound(inor.begin(), inor.end(), high) - inor.begin();\n\n        int ans = 0;\n        for(int i=li; i<=hi; i++) {\n            ans += inor[i];\n        }\n\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false}