{"id":884419367,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674572833,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/884419367/","is_pending":"Not Pending","title":"Design Linked List","memory":"N/A","code":"class Node {\n    public:\n    int val;\n    Node* next;\n    Node(int _val) {\n        val = _val;\n        next = NULL;\n    }\n};\n\nclass MyLinkedList {\n    Node* head;\n    Node* tail;\npublic:\n    MyLinkedList() {\n        head = tail = NULL;\n    }\n    \n    int get(int index) {\n        if(head == NULL) return -1;\n\n        Node* temp = head;\n        int i = 0;\n        while(i < index) {\n            temp = temp->next;\n            i++;\n        }\n\n        return temp->val;\n    }\n    \n    void addAtHead(int val) {\n        Node* node = new Node(val);\n\n        if(head == NULL) {\n            head = tail = node;\n        }\n\n        else {\n            node->next = head;\n            head = node;\n        }\n    }\n    \n    void addAtTail(int val) {\n        Node* node = new Node(val);\n\n        if(head == NULL) head = tail = node;\n\n        else {\n            tail->next = node;\n            tail = node;\n        }\n    }\n    \n    void addAtIndex(int index, int val) {\n        if(index == 0) {\n            addAtHead(val);\n            return;\n        }\n\n        Node* prev = NULL;\n        Node* curr = head;\n        Node* node = new Node(val);\n        int i=0;\n\n        while(curr != NULL && i < index) {\n            prev = curr;\n            curr = curr->next;\n            i++;\n        }\n\n        prev->next = node;\n        node->next = curr;\n    }\n    \n    void deleteAtIndex(int index) {\n        if(index == 0) {\n            head = head->next;\n            return;\n        }\n\n        Node* prev = NULL;\n        Node* curr = head;\n        int i=0;\n\n        while(curr != NULL && i < index) {\n            prev = curr;\n            curr = curr->next;\n            i++;\n        }\n        \n        prev->next = curr->next;\n    }\n};\n\n/**\n * Your MyLinkedList object will be instantiated and called as such:\n * MyLinkedList* obj = new MyLinkedList();\n * int param_1 = obj->get(index);\n * obj->addAtHead(val);\n * obj->addAtTail(val);\n * obj->addAtIndex(index,val);\n * obj->deleteAtIndex(index);\n */","compare_result":"1100000000000000000000000000000000000000000000000000000000000000","title_slug":"design-linked-list","has_notes":false}