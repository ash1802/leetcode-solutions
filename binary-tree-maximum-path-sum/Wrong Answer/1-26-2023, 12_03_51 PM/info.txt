{"id":885484320,"lang":"cpp","lang_name":"C++","time":"4Â months, 1Â week","timestamp":1674714831,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/885484320/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int solve(TreeNode* root) {\n        if(root == NULL) return 0;\n        if(!root->left && !root->right) return root->val;\n\n        int left = solve(root->left);\n        int right = solve(root->right);\n        int current = left + right + root->val;\n\n        return max(max(left,right), current);\n    }\n\npublic:\n    int maxPathSum(TreeNode* root) {\n        int sum = max(solve(root),root->val);\n        return sum;\n    }\n};","compare_result":"1111111100011111010000010111100111010101000100101000000000000000010000001100000100000000000000","title_slug":"binary-tree-maximum-path-sum","has_notes":false}