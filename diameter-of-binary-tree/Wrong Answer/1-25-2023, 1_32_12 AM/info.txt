{"id":884596505,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674590532,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/884596505/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int height(TreeNode* root) {\n        if(root == NULL) return 0;\n\n        int lh = height(root->left);\n        int rh = height(root->right);\n\n        return max(lh,rh)+1;\n    }\n\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        if(root == NULL) return 0;\n\n        int lh = height(root->left);\n        int rh = height(root->right);\n\n        return lh+rh;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001011","title_slug":"diameter-of-binary-tree","has_notes":false}