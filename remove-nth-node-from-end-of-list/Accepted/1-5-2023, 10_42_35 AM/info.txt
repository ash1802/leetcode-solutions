{"id":871684447,"lang":"cpp","lang_name":"C++","time":"4 months, 4 weeks","timestamp":1672895555,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/871684447/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"10.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n\n    int lenLL(ListNode* head) {\n        if(head == NULL) return 0;\n\n        int ans = 0;\n        while(head != NULL) {\n            ans++;\n            head = head->next;\n        }\n\n        return ans;\n    }\n\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        int len = lenLL(head);\n        int delPos = len - n + 1;\n\n        if(len == 1) return NULL;\n\n        int i = 1;\n        ListNode *curr = head;\n        ListNode *prev = NULL;\n\n        if(delPos == 1) {\n            head = head->next;\n            return head;\n        }\n\n        while(i < delPos) {\n            prev = curr;\n            curr = curr->next;\n            i++;\n        }\n\n        prev->next = curr->next;\n        delete curr;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-nth-node-from-end-of-list","has_notes":false}