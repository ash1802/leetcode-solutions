{"id":878524000,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1673775983,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/878524000/","is_pending":"Not Pending","title":"Reorder List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n    ListNode *reverseList(ListNode* head) {\n        if(head == NULL || head->next == NULL) return head;\n\n        ListNode* newHead = reverseList(head->next);\n        head->next->next = head;\n        head->next = NULL;\n        return newHead;\n    }\n\npublic:\n    void reorderList(ListNode* head) {\n        if(head == NULL || head->next == NULL) return;\n\n        ListNode *left = head;\n        ListNode* right = head->next;\n        left->next = NULL;\n\n        right = reverseList(right);\n        left->next = right;\n\n        reorderList(left->next);\n    }\n};","compare_result":"111111111110","title_slug":"reorder-list","has_notes":false}