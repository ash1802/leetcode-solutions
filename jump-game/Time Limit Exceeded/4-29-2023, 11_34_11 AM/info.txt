{"id":941408769,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1682748251,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/941408769/","is_pending":"Not Pending","title":"Jump Game","memory":"N/A","code":"class Solution {\npublic:\n    // recursion + memoization solution here\n    bool solve(vector<int> nums, int index, vector<int>& dp) {\n        if(index == 0) return true;\n\n        if(dp[index] != -1) return dp[index];\n\n        for(int i = index-1; i>=0; i--) {\n            if(nums[i] >= index - i) {\n                if(solve(nums, i, dp)) dp[index] = true;\n            }\n        }\n\n        return dp[index] = false;\n    }\n\n    bool canJump(vector<int>& nums) {\n        int n = nums.size();\n        if(n <= 1) return true;\n        // vector<int> dp(n, -1);\n        // return solve(nums, n-1, dp);\n\n        // tabulation solution here\n        vector<bool> dp(n, false);  \n        dp[0] = true;\n\n        for(int index=0; index<n; index++) {\n            for(int i = index-1; i>=0; i--) {\n                if(nums[i] >= index - i) {\n                    if(dp[i]) dp[index] = true;\n                }\n            }\n        }\n\n        return dp[n-1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000","title_slug":"jump-game","has_notes":false}