{"id":755366820,"lang":"cpp","lang_name":"C++","time":"10 months, 1 week","timestamp":1658661184,"status":10,"status_display":"Accepted","runtime":"139 ms","url":"/submissions/detail/755366820/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"57.5 MB","code":"class Solution {\npublic:\n    vector<vector<string>> partition(string s) {\n        vector<vector<string>> ans;\n        vector<string> res;\n        solve(s,ans,res,0);\n        return ans;\n    }\n    \n    void solve(string s, vector<vector<string>>& ans, vector<string>& res, int start) {\n        if(start == s.length()) {\n            ans.push_back(res);\n            return;\n        }\n        \n        for(int i=start; i<s.length(); i++) {\n            if(isPalindrome(s,start,i)) {\n                res.push_back(s.substr(start, i-start+1));\n                solve(s,ans,res,i+1);\n                res.pop_back();\n            }\n        }\n    }\n    \n    bool isPalindrome(string s, int start, int end) {\n        while(start <= end) {\n            if(s[start] != s[end]) return false;\n            start++;\n            end--;\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false}