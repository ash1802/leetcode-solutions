{"id":882907257,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674368799,"status":10,"status_display":"Accepted","runtime":"242 ms","url":"/submissions/detail/882907257/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"144.9 MB","code":"class Solution {\npublic:\n    vector<vector<string>> partition(string s) {\n        vector<string> palindromes;\n        vector<vector<string>> ans;\n        solve(s,palindromes,ans,0);\n        return ans;\n    }\n\n    void solve(string s, vector<string> palindromes, vector<vector<string>>& ans, int st) {\n        if(st == s.size()) {\n            ans.push_back(palindromes);\n            return;\n        }\n\n        for(int i=st; i<s.size(); i++) {\n            if(isPalindrome(s,st,i)) {\n                string sub = s.substr(st,i-st+1);\n                palindromes.push_back(sub);\n                solve(s,palindromes,ans,i+1);\n                palindromes.pop_back();\n            }\n        }\n\n    }\n\n    bool isPalindrome(string s, int start, int end) {\n        while(start <= end) {\n            if(s[start] != s[end]) return false;\n            start++;\n            end--;\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false}