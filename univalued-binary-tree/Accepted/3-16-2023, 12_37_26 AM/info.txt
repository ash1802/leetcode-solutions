{"id":915853532,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1678907246,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/915853532/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"10 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool check(TreeNode* root, int val) {\n        if(root == NULL) return true;\n\n        bool left = check(root->left, val);\n        bool right = check(root->right, val);\n\n        return left && right && (root->val == val);\n    }\n\n    bool isUnivalTree(TreeNode* root) {\n        return check(root, root->val);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree","has_notes":false}