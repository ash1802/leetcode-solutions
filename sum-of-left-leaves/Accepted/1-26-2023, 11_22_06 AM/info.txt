{"id":885462918,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674712326,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/885462918/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"13.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solve(TreeNode* root, int& ans) {\n        if(root == NULL) return;\n\n        if(root->left) {\n            TreeNode* leftChild = root->left;\n            if(!leftChild->left && !leftChild->right) ans += leftChild->val;\n        }\n\n        solve(root->left, ans);\n        solve(root->right, ans);\n    }\n\n    int sumOfLeftLeaves(TreeNode* root) {\n        if(!root) return 0;\n        int ans = 0;\n        solve(root, ans);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false}