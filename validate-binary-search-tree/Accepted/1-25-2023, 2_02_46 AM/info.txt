{"id":884610732,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674592366,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/884610732/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.5 MB","code":"class Solution {\npublic:\n    bool validate(TreeNode* root, TreeNode* low, TreeNode* high) {\n        // Empty trees are valid BSTs.\n        if (root == nullptr) {\n            return true;\n        }\n\n        // The current node's value must be between low and high.\n        if ((low != nullptr and root->val <= low->val) or\n            (high != nullptr and root->val >= high->val)) {\n            return false;\n        }\n\n        // The left and right subtree must also be valid.\n        return validate(root->right, root, high) and\n               validate(root->left, low, root);\n    }\n\n    bool isValidBST(TreeNode* root) {\n        return validate(root, nullptr, nullptr);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}