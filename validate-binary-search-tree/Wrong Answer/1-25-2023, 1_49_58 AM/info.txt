{"id":884604957,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674591598,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/884604957/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if(!root) return false;\n\n        if(!root->left && !root->right) return true;\n\n        bool left = isValidBST(root->left);\n        bool right = isValidBST(root->right);\n        bool curr;\n\n        if(!root->left) curr = (root->val < root->right->val);\n        else if(!root->right) curr = (root->left->val < root->val);\n        else curr = (root->left->val < root->val) && (root->val < root->right->val);\n\n        return left && right && curr;\n    }\n};","compare_result":"1111111011100110011101000000000000000000110110111111001101110111111010111011011110","title_slug":"validate-binary-search-tree","has_notes":false}