{"id":884608836,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674592106,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/884608836/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool isValidUtil(TreeNode* root, int mini, int maxi) {\n        if(!root) return true;\n\n        bool left = isValidUtil(root->left, mini, root->val);\n        bool right = isValidUtil(root->right, root->val, maxi);\n\n        return left && right && (root->val > mini && root->val < maxi);\n    }\n\npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValidUtil(root, INT_MIN, INT_MAX);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111001111010101110011110","title_slug":"validate-binary-search-tree","has_notes":false}