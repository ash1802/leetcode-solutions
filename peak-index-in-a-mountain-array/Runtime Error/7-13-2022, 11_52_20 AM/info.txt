{"id":745833950,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1657693340,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/745833950/","is_pending":"Not Pending","title":"Peak Index in a Mountain Array","memory":"N/A","code":"class Solution {\npublic:\n    int peakIndexInMountainArray(vector<int>& arr) {\n        int low = 0, high = arr.size() - 1;\n        int mid;\n        \n        while(low <= high) {\n            mid = low + ((high-low)/2);\n            // peak will be greater than both its adjacent members\n            if(arr[mid] > arr[mid-1] && arr[mid] > arr[mid+1]) {\n                return mid;\n            }\n            \n            // left side means increasing order\n            // if we are on the left side of peak we need to go to the right\n            else if(arr[mid-1] < arr[mid] && arr[mid] < arr[mid+1]) {\n                low = mid + 1;\n            }\n            \n            // right side means decreasing order\n            // if we are on the right side of peak we need to go to the left\n            else if(arr[mid+1] < arr[mid] && arr[mid] < arr[mid-1]) {\n                high = mid-1;\n            }\n        }\n        \n        return -1;\n    }\n};","compare_result":"111111110000000000000000000000000000000000","title_slug":"peak-index-in-a-mountain-array","has_notes":false}