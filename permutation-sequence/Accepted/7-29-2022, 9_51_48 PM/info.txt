{"id":759983646,"lang":"cpp","lang_name":"C++","time":"10 months, 1 week","timestamp":1659111708,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/759983646/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"6.1 MB","code":"class Solution {\npublic:\n    string getPermutation(int n, int k) {\n        // find the number of permutations\n        int fact = 1;\n        // store the numbers from 1 to n in a list to use it later\n        vector<int> nums;\n        for(int i=1; i<n; i++) {\n            fact *= i;\n            nums.push_back(i);\n        }\n        // push back n since it isn't added in the above loop\n        nums.push_back(n);\n        \n        string ans = \"\";\n        k--;\n        \n        while(true) {\n            ans += to_string(nums[k/fact]);\n            nums.erase(nums.begin() + k/fact);\n            \n            if(nums.size() == 0) break;\n            \n            k = k % fact;\n            fact = fact / nums.size();    \n        }\n        \n        return ans;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence","has_notes":false}