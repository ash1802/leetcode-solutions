{"id":919262083,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1679376132,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/919262083/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"10.6 MB","code":"class Solution {\npublic:    \n    int dp[1000 + 1][1000 + 1];\n    \n    int maxLen(string& s1, string& s2, int n, int m)\n    {\n        for (int i = 0; i < n + 1; i++) {\n            for (int j = 0; j < m + 1; j++) {\n               if (i == 0 || j == 0) {\n                   dp[i][j] = 0;\n               } \n            }\n        }\n        \n        for (int i = 1; i < n + 1; i++) {\n            for (int j = 1; j < m + 1; j++) {\n                if (s1[i - 1] == s2[j - 1])\n                    dp[i][j] = 1 + dp[i - 1][j - 1];\n                else\n                    dp[i][j] = max(0 + dp[i][j - 1], 0 + dp[i - 1][j]);\n            }\n        }\n\n        return dp[n][m];\n    }\n        \n    int longestCommonSubsequence(string s1, string s2) \n    {\n        memset(dp, -1, sizeof(dp));        \n        return maxLen(s1, s2, s1.length(), s2.length());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false}