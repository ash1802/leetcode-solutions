{"id":895846918,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1676110371,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/895846918/","is_pending":"Not Pending","title":"Matrix Block Sum","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {\n        int n = mat.size();\n        vector<vector<int>> prefix(n, vector<int>(n, 0));\n\n        for(int r = 0; r<n; r++) {\n            prefix[r][0] = mat[r][0];\n        }\n\n        for(int i=0; i<n; i++) {\n            for(int j=1; j<n; j++) {\n                prefix[i][j] = prefix[i][j-1] + mat[i][j];\n            }\n        }\n\n        vector<vector<int>> ans(n, vector<int>(n, 0));\n\n        for(int i=0; i<n; i++) {\n            for(int j=0; j<n; j++) {\n                int rowStart = (i-k >= 0) ? i-k : 0;\n                int rowEnd = (i+k < n) ? i+k : n-1;\n\n                for(int l = rowStart; l<=rowEnd; l++) {\n                    int colStart = (j-k >= 0) ? j-k : 0;\n                    int colEnd = (j+k < n) ? j+k : n-1;\n\n                    if(colStart == 0) ans[i][j] += prefix[l][colEnd];\n                    else ans[i][j] += prefix[l][colEnd] - prefix[l][colStart-1];\n                }\n            }\n        }\n\n        return ans;\n    }\n};","compare_result":"110000000000","title_slug":"matrix-block-sum","has_notes":false}