{"id":749321183,"lang":"cpp","lang_name":"C++","time":"10 months, 2 weeks","timestamp":1658053542,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/749321183/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.8 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        vector<int> ans;\n        int row = matrix.size();\n        int col = matrix[0].size();\n        \n        int count = 0;\n        int total = row * col;\n        \n        int startRow = 0;\n        int startCol = 0;\n        int endRow = row-1;\n        int endCol = col-1;\n        \n        while (count < total) {\n            for(int j=startCol; count < total && j<=endCol; j++) {\n                ans.push_back(matrix[startRow][j]);\n                count++;\n            }\n            startRow++;\n            \n            for(int i=startRow; count < total &&  i<=endRow; i++) {\n                ans.push_back(matrix[i][endCol]);\n                count++;\n            }\n            endCol--;\n            \n            for(int j=endCol; count < total && j>=startCol; j--) {\n                ans.push_back(matrix[endRow][j]);\n                count++;\n            }\n            endRow--;\n            \n            for(int i=endRow; count < total && i>=startRow; i--) {\n                ans.push_back(matrix[i][startCol]);\n                count++;\n            }\n            startCol++; \n        }\n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false}