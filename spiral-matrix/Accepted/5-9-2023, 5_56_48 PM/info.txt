{"id":947220624,"lang":"cpp","lang_name":"C++","time":"3 weeks, 3 days","timestamp":1683635208,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/947220624/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.7 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        int n = matrix.size();\n        int m = matrix[0].size();\n\n        int up = 0, down = n-1;\n        int left = 0, right = m-1;\n        int count = 0;\n        int total = n * m;\n\n        vector<int> ans;\n        int i = 0;\n        while(count < total) {\n            for(i=left; count < total && i <= right; i++) {\n                ans.push_back(matrix[up][i]);\n                count++;\n            }\n            up++;\n            \n            for(i=up; count < total && i <= down; i++) {\n                ans.push_back(matrix[i][right]);\n                count++;\n            }\n            right--;\n\n            for(i=right; count < total && i >= left; i--) {\n                ans.push_back(matrix[down][i]);\n                count++;\n            }\n            down--;\n\n            for(i=down; count < total && i >= up; i--) {\n                ans.push_back(matrix[i][left]);\n                count++;\n            }\n            left++;\n        }\n\n        return ans;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false}