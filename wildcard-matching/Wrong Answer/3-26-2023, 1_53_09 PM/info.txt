{"id":922312469,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1679818989,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/922312469/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution {\npublic:\n    bool solve(string s, string p, int i, int j) {\n        // base cases\n        if(i < 0 && j < 0) return true;\n        if(i < 0 && j >= 0) return false;\n\n        if(j < 0 && i >= 0) {\n            for(int k = 0; k<=i; k++) {\n                if(p[k] != '*') return false;\n            }\n            return true;\n        }\n\n        if(s[i] == p[j] || p[j] == '?') {\n            return solve(s,p,i-1,j-1);\n        }\n\n        if(p[j] == '*') {\n            return solve(s, p, i, j-1) || solve(s, p, i-1, j);\n        }\n\n        return false;\n    }\n\n    bool isMatch(string s, string p) {\n        int n = s.size();\n        int m = p.size();\n\n        return solve(s, p, n-1, m-1);\n    }\n};","compare_resulttitle_slug":"wildcard-matching","has_notes":false}