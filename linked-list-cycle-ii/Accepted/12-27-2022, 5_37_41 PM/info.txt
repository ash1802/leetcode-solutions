{"id":866322048,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1672142861,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/866322048/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"7.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode *fast = head;\n        ListNode *slow = head;\n\n        if(head == NULL) return NULL;\n        \n        while(slow != NULL && fast != NULL && fast->next != NULL) {\n            slow = slow->next;\n            fast = fast->next->next;\n            if(slow == fast) {\n                ListNode *temp = head;\n                while(temp != fast) {\n                    temp = temp->next;\n                    fast = fast->next;\n                }\n                return temp;\n            }\n        }\n\n        return NULL;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false}