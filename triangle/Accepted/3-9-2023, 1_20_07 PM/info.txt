{"id":911946538,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1678348207,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/911946538/","is_pending":"Not Pending","title":"Triangle","memory":"9 MB","code":"class Solution {\npublic:\n    // memoization solution here\n    int solve(vector<vector<int>> triangle, int i, int j, vector<vector<int>>& dp) {\n        if(i == triangle.size() - 1) return triangle[i][j];\n        if(dp[i][j] != -1) return dp[i][j];\n        int down = triangle[i][j] + solve(triangle, i+1, j, dp);\n        int left = triangle[i][j] + solve(triangle, i+1, j+1, dp);\n        return dp[i][j] = min(down, left);\n    }\n\n    int minimumTotal(vector<vector<int>>& triangle) {\n        int m = triangle.size();\n        // vector<vector<int>> dp(m, vector<int>(m, -1));\n        // return solve(triangle, 0, 0, dp);\n\n        // note that tabulation and memoization follow opposite order\n        // i.e., if memo. is from 0 to n-1, then tabul. is from n-1 to 0 and vice-versa\n\n        // tabulation solution here\n        // vector<vector<int>> dp(m, vector<int>(m, 0));\n        // for(int j=0; j<m; j++) {\n        //     dp[m-1][j] = triangle[m-1][j];\n        // }\n\n        // for(int i=m-2; i>=0; i--) {\n        //     for(int j=i; j>=0; j--) {\n        //         int down = triangle[i][j] + dp[i+1][j];\n        //         int left = triangle[i][j] + dp[i+1][j+1];\n\n        //         dp[i][j] = min(down, left);\n        //     }\n        // }\n\n        // return dp[0][0];\n\n        // space optimisation here\n        vector<int> curr(m,0);\n        for(int j=0; j<m; j++) {\n            curr[j] = triangle[m-1][j];\n        }\n\n        for(int i=m-2; i>=0; i--) {\n            vector<int> next(m, 0);\n            for(int j=i; j>=0; j--) {\n                int down = triangle[i][j] + curr[j];\n                int left = triangle[i][j] + curr[j+1];\n                next[j] = min(down, left);\n            }\n            curr = next;\n        }\n\n        return curr[0];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false}