{"id":885472552,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674713486,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/885472552/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(root == NULL) return NULL;\n        if(root->val == p->val || root->val == q->val) return root;\n\n        TreeNode* left = lowestCommonAncestor(root->left,p,q);\n        TreeNode* right = lowestCommonAncestor(root->right,p,q);\n\n        if(left != NULL && right != NULL) return root;\n        else if(left == NULL && right != NULL) return right;\n        else if(left != NULL && right == NULL) return left;\n        else return NULL;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false}