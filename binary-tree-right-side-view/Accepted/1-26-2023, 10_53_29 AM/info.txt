{"id":885449120,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674710609,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/885449120/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void solve(TreeNode* root, vector<int>& ans, int level) {\n        if(!root) return;\n        if(level == ans.size()) ans.push_back(root->val);\n        solve(root->right,ans,level+1);\n        solve(root->left,ans,level+1);\n    }   \n\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> ans;\n        if(!root) return ans;\n        int level = 0;\n        solve(root,ans,level);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false}