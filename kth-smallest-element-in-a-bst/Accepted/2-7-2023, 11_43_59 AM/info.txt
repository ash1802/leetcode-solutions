{"id":893134213,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1675750439,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/893134213/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int inorder(TreeNode* root, int& i, int k) {\n        if(root == NULL) return -1;\n\n\n        int left = inorder(root->left, i, k);\n        if(left != -1) return left;\n\n        i++;        \n        if(i == k) return root->val;\n\n        return inorder(root->right, i, k);\n    }\n\n    int kthSmallest(TreeNode* root, int k) {\n        int i=0;\n        return inorder(root, i, k);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}