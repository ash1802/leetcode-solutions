{"id":890469319,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1675398193,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/890469319/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root, vector<int>& in) {\n        if(root == NULL) return;\n\n        inorder(root->left, in);\n        in.push_back(root->val);\n        inorder(root->right, in);\n    }\n\n    int kthSmallest(TreeNode* root, int k) {\n        if(root == NULL) return -1;\n\n        vector<int> in;\n        inorder(root, in);\n\n        return in[k-1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false}