{"id":950951851,"lang":"cpp","lang_name":"C++","time":"2 weeks, 3 days","timestamp":1684173705,"status":10,"status_display":"Accepted","runtime":"715 ms","url":"/submissions/detail/950951851/","is_pending":"Not Pending","title":"Swapping Nodes in a Linked List","memory":"180 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int findLen(ListNode* head) {\n        int len = 0;\n        while(head != NULL) {\n            head = head->next;\n            len++;\n        }\n        return len;\n    }\n\n    ListNode* swapNodes(ListNode* head, int k) {\n        ListNode* first = head;\n        int i = 1;\n        while(first != NULL && i < k) {\n            first = first->next;\n            i++;\n        }\n\n        int n = findLen(head);\n        ListNode* last = head;\n        i=0;\n        while(last != NULL && i < n-k) {\n            last = last->next;\n            i++;\n        }\n\n        int temp = first->val;\n        first->val = last->val;\n        last->val = temp;\n\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"swapping-nodes-in-a-linked-list","has_notes":false}