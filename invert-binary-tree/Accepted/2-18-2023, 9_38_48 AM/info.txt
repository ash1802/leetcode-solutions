{"id":900100802,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1676693328,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/900100802/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void invertTreeUtil(TreeNode* root) {\n        if(root == NULL) return;\n\n        TreeNode *temp = root->left;\n        root->left = root->right;\n        root->right = temp;\n\n        invertTreeUtil(root->left);\n        invertTreeUtil(root->right);\n    }   \n\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        invertTreeUtil(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false}