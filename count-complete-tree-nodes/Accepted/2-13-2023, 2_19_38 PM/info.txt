{"id":897055609,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1676278178,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/897055609/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"31.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root, vector<int>& in) {\n        if(root == NULL) return;\n\n        inorder(root->left, in);\n        in.push_back(root->val);\n        inorder(root->right, in);\n    }\n\n    int countNodes(TreeNode* root) {\n        vector<int> in;\n        inorder(root, in);\n        return in.size();\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false}