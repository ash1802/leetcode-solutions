{"id":890059141,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1675344102,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/890059141/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"9.6 MB","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        unordered_map<char, int> mp;\n\n        for(int i=0; i<order.size(); i++) {\n            mp[order[i]] = i;\n        }\n\n        for(int i=0; i<words.size()-1; i++) {\n            string first = words[i];\n            string second = words[i+1];\n            if(mp[first[0]] < mp[second[0]]) continue;\n\n            int a=0, b=0;\n            while(a < first.size() && b < second.size() && first[a] == second[b]) { a++; b++; }\n            if(b == second.size() && a < first.size()) return false;\n            if(mp[first[a]] > mp[second[b]]) return false;\n        }\n\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false}