{"id":852938243,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1669911186,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/852938243/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void preOrderUtil(TreeNode* root, vector<int>& ans) {\n        if(root == NULL) return;\n        ans.push_back(root->val);\n        preOrderUtil(root->left, ans);\n        preOrderUtil(root->right, ans);\n    }\n\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> ans;\n        preOrderUtil(root,ans);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}