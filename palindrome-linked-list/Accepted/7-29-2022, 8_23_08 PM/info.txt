{"id":759927276,"lang":"cpp","lang_name":"C++","time":"10Â months, 1Â week","timestamp":1659106388,"status":10,"status_display":"Accepted","runtime":"397 ms","url":"/submissions/detail/759927276/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"118.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n        ListNode *reverseLinkedList(ListNode *&head) {\n        ListNode *curr = head;\n        ListNode *prev = NULL;\n        ListNode *nextp = NULL;\n\n        while(curr != NULL) {\n            nextp = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = nextp;\n        }\n\n        return prev;\n    }\n\n    int findSize(ListNode *head) {\n        int count = 0;\n        while(head != NULL) {\n            count++;\n            head = head->next;\n        }\n        return count;\n    }\n\n    bool isPalindrome(ListNode *head) {\n\n        if(head == NULL || head->next == NULL) return true;\n\n        int size = findSize(head);\n        ListNode *slow = head;\n        ListNode *fast = head;\n        ListNode *prevSlow = NULL;\n        do {\n            fast = fast->next;\n            if(fast->next != NULL) fast = fast->next;\n            prevSlow = slow;\n            slow = slow->next;\n        } while(fast->next != NULL);\n\n        if(size&1) slow = slow->next;\n        slow = reverseLinkedList(slow);\n        prevSlow->next = slow;\n\n        ListNode *temp1 = slow;\n        ListNode *temp2 = head;\n\n        while(temp1 != NULL && temp2 != NULL) {\n            if(temp1->val != temp2->val) return false;\n            temp1 = temp1->next;\n            temp2 = temp2->next;\n        }\n\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false}