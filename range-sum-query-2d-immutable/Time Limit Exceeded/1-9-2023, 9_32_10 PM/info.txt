{"id":874830706,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1673280130,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/874830706/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"N/A","code":"class NumMatrix {\n    vector<vector<int>> M;\npublic:\n    NumMatrix(vector<vector<int>>& matrix) {\n        int m = matrix.size();\n        int n = matrix[0].size();\n\n        for(int i=0; i<m; i++) {\n            vector<int> row;\n            for(int j=0; j<n; j++) {\n                row.push_back(matrix[i][j]);\n            }\n            M.push_back(row);\n        }\n    }\n    \n    int sumRegion(int row1, int col1, int row2, int col2) {\n        int sum = 0;\n        for(int i = row1; i<=row2; i++) {\n            for(int j = col1; j<=col2; j++) {\n                sum += M[i][j];\n            }\n        }\n        return sum;\n    }\n};\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */","compare_result":"1111111111111110000000","title_slug":"range-sum-query-2d-immutable","has_notes":false}