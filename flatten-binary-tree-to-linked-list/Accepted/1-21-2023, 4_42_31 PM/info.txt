{"id":882330936,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674299551,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/882330936/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"13.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void preorder(TreeNode* root, vector<int>& pre) {\n        if(root == NULL) return;\n\n        pre.push_back(root->val);\n        preorder(root->left, pre);\n        preorder(root->right, pre);\n    }\n\npublic:\n    void flatten(TreeNode* root) {\n        vector<int> pre;\n        preorder(root,pre);\n\n        TreeNode* node = root;\n        for(int i=1; i<pre.size(); i++) {\n            node->left = NULL;\n            node->right = new TreeNode(pre[i]);\n            node = node->right;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}