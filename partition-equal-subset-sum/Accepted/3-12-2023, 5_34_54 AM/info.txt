{"id":913466684,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1678579494,"status":10,"status_display":"Accepted","runtime":"324 ms","url":"/submissions/detail/913466684/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"12.8 MB","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& arr) {\n\n        int sum = 0;\n        for(int i=0; i<arr.size(); i++) sum += arr[i];\n        if(sum & 1) return false;\n\n        int k = sum / 2;\n        int n = arr.size();\n        vector<bool> prev(k+1,false);\n        \n        prev[0] = true;\n        if(arr[0]<=k) prev[arr[0]] = true;\n        \n        for(int ind = 1; ind<n; ind++){\n            vector<bool> temp(k+1,false);\n            temp[0] = true;\n            for(int target= 1; target<=k; target++){  \n                bool notTaken = prev[target];\n                bool taken = false;\n                if(arr[ind]<=target) taken = prev[target-arr[ind]];\n                temp[target]= notTaken||taken;\n            }\n            prev = temp;\n        }\n        \n        return prev[k];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false}