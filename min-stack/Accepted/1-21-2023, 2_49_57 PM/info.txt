{"id":882287645,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674292797,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/882287645/","is_pending":"Not Pending","title":"Min Stack","memory":"16.3 MB","code":"class MinStack {\n    stack<int> st;\n    stack<int> minSt;\n\npublic:\n    MinStack() {\n        \n    }\n    \n    void push(int val) {\n        st.push(val);\n        if(minSt.empty() || val <= minSt.top()) minSt.push(val);\n    }\n    \n    void pop() {\n        if(st.empty()) return;\n\n        int curr = st.top();\n        st.pop();\n\n        if(curr == minSt.top()) minSt.pop();\n    }\n    \n    int top() {\n        return st.top();\n    }\n    \n    int getMin() {\n        return minSt.top();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false}