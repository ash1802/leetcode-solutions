{"id":952245428,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1684347165,"status":10,"status_display":"Accepted","runtime":"347 ms","url":"/submissions/detail/952245428/","is_pending":"Not Pending","title":"Find the Longest Valid Obstacle Course at Each Position","memory":"117.7 MB","code":"class Solution {\npublic:\n    vector<int> longestObstacleCourseAtEachPosition(vector<int>& nums) {\n        vector<int> lis;\n        for (int i = 0; i < nums.size(); ++i) {\n            int x = nums[i];\n            if (lis.empty() || lis[lis.size() - 1] <= x) { // Append to LIS if new element is >= last element in LIS\n                lis.push_back(x);\n                nums[i] = lis.size();\n            } else {\n                int idx = upper_bound(lis.begin(), lis.end(), x) - lis.begin(); // Find the index of the smallest number > x\n                lis[idx] = x; // Replace that number with x\n                nums[i] = idx + 1;\n            }\n        }\n        return nums;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-longest-valid-obstacle-course-at-each-position","has_notes":false}