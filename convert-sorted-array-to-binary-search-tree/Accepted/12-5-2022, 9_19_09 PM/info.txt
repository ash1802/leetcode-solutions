{"id":855091157,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1670255349,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/855091157/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* arrayToBST(vector<int>& nums, int start, int end) {\n        if(start > end) return NULL;\n        int mid = start + (end-start) / 2;\n        TreeNode *root = new TreeNode(nums[mid]);\n        root->left = arrayToBST(nums, start, mid-1);\n        root->right = arrayToBST(nums, mid+1, end);\n        return root;\n    }\n\n\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        TreeNode *root = arrayToBST(nums, 0, nums.size()-1);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false}