{"id":885604564,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674731074,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/885604564/","is_pending":"Not Pending","title":"Path Sum II","memory":"21.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool checkSum(vector<int> nums, int target) {\n        int sum = 0;\n        for(int num: nums) {\n            sum += num;\n        }\n        return sum == target;\n    }\n\n    void solve(TreeNode* root, int target, vector<vector<int>>& paths, vector<int>& path) {\n        if(root == NULL) return;\n        \n\n        path.push_back(root->val);\n        solve(root->left, target, paths, path);\n        solve(root->right, target, paths, path);\n        \n        if(!root->left && !root->right && checkSum(path, target)) paths.push_back(path);\n        \n        path.pop_back();\n    }\n\npublic:\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        vector<vector<int>> paths;\n        vector<int> path;\n        solve(root,targetSum,paths,path);\n        return paths;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false}