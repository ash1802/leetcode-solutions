{"id":862466363,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1671510457,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/862466363/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"6.9 MB","code":"class MyQueue {\n    stack<int> q;\npublic:\n    MyQueue() {\n        \n    }\n    \n    void push(int x) {\n        if(q.empty()) q.push(x);\n        else {\n            stack<int> temp;\n            while(!q.empty()) {\n                temp.push(q.top());\n                q.pop();\n            }\n            q.push(x);\n            while(!temp.empty()) {\n                q.push(temp.top());\n                temp.pop();\n            }\n        }\n    }\n    \n    int pop() {\n        if(q.empty()) return -1;\n        int ele = q.top();\n        q.pop();\n        return ele;\n    }\n    \n    int peek() {\n        return q.top();\n    }\n    \n    bool empty() {\n        return q.empty();\n    }\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue* obj = new MyQueue();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->peek();\n * bool param_4 = obj->empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false}