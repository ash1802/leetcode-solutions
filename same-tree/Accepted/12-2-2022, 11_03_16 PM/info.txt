{"id":853511554,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1670002396,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/853511554/","is_pending":"Not Pending","title":"Same Tree","memory":"10.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSameTreeUtil(TreeNode* p, TreeNode* q) {\n        if(p == NULL && q == NULL) return true;\n        if((p == NULL && q != NULL) || (p != NULL && q == NULL)) return false;\n\n        return (p->val == q->val) && isSameTreeUtil(p->left, q->left) && isSameTreeUtil(p->right, q->right);\n    }\n\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        return isSameTreeUtil(p,q);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false}