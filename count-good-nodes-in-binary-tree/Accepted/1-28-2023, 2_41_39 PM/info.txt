{"id":886740965,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1674897099,"status":10,"status_display":"Accepted","runtime":"522 ms","url":"/submissions/detail/886740965/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"167.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool isValidPath(vector<int> path, int value) {\n        for(int i=0; i<path.size(); i++) {\n            if(path[i] > value) return false;\n        }\n        return true;\n    }\n\n    void solve(TreeNode* root, vector<int>& path, int& ans) {\n        if(root == NULL) return;\n        path.push_back(root->val);\n        solve(root->left, path, ans);\n        solve(root->right, path, ans);\n        if(isValidPath(path, root->val)) ans = ans+1;\n        path.pop_back();\n    }\n\npublic:\n    int goodNodes(TreeNode* root) {\n        if(root == NULL) return 0;\n        int ans = 0;\n        vector<int> path;\n        solve(root, path, ans);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false}