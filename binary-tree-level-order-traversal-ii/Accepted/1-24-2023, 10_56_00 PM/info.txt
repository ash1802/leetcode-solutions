{"id":884501961,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674581160,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/884501961/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        vector<vector<int>> ans;\n        queue<TreeNode*> q;\n\n        if(root == NULL) return ans;\n        \n        q.push(root);\n        q.push(NULL);\n\n        vector<int> level;\n        stack<vector<int>> levels;\n\n        while(!q.empty()) {\n            TreeNode* temp = q.front();\n            q.pop();\n\n            if(temp == NULL) {\n                levels.push(level);\n                level.clear();\n                if(!q.empty()) q.push(NULL);\n            }\n            else {\n                level.push_back(temp->val);\n                if(temp->left) q.push(temp->left);\n                if(temp->right) q.push(temp->right);\n            }\n        }\n\n        while(!levels.empty()) {\n            ans.push_back(levels.top());\n            levels.pop();\n        }\n\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false}