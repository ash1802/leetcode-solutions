{"id":954058935,"lang":"cpp","lang_name":"C++","time":"1 week, 5 days","timestamp":1684607390,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/954058935/","is_pending":"Not Pending","title":"Evaluate Division","memory":"8.3 MB","code":"class Solution {\npublic:\nvoid dfs(string start,string end,map<string,double>& mp,map<string,vector<string>>& graph,double& val,map<string,int>& visited,bool& found){\n        visited[start]=1;\n    \n        if(found==true)\n            return ;\n        for(auto child:graph[start]){\n            if(visited[child]!=1){\n                // cout<<start<<\" \"<<child<<\"\\n\";\n                val*=mp[start+\"->\"+child];\n                if(end==child){\n                    // cout<<end<<\" -- \"<<child<<\"\\n\";\n                    found=true;\n                    return ;\n                }\n                dfs(child,end,mp,graph,val,visited,found);\n                if(found==true){\n                    return ;\n                }\n                else{\n                    val/=mp[start+\"->\"+child];\n                }\n            }\n        }\n       \n        \n    }\n    vector<double> calcEquation(vector<vector<string>>& equations, vector<double>& values, vector<vector<string>>& queries) {\n        vector<double> ans;\n        map<string,double> mp;\n        map<string,vector<string>> graph;\n        for(int i=0;i<equations.size();i++){\n            string u=equations[i][0];\n            string v=equations[i][1];\n            mp[u+\"->\"+v]=values[i];\n            mp[v+\"->\"+u]=1/values[i];\n            graph[u].push_back(v);\n            graph[v].push_back(u);\n        }\n        for(int i=0;i<queries.size();i++){\n            string start=queries[i][0];\n            string end=queries[i][1];\n            if(graph.find(start)==graph.end()||graph.find(end)==graph.end()){\n                ans.push_back(-1);\n            }\n            else{\n                // ans.push_back(1);\n                double val=1;\n                map<string,int> visited;\n                bool found=false;\n                if(start==end){\n                    found=true;\n                }\n                else\n                dfs(start,end,mp,graph,val,visited,found);\n                if(found==true)\n                ans.push_back(val);\n                else\n                    ans.push_back(-1);\n                \n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111","title_slug":"evaluate-division","has_notes":false}