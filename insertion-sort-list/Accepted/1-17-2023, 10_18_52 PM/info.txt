{"id":880011116,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1673974132,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/880011116/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"9.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* insertionSortList(ListNode* head) {\n        ListNode* dummy = new ListNode();\n\n        ListNode* curr = head;\n\n        while(curr != NULL) {\n            ListNode* prev = dummy;\n\n            while(prev->next != NULL && prev->next->val < curr->val) prev = prev->next;\n\n            ListNode* nextP = curr->next;\n            curr->next = prev->next;\n            prev->next = curr;\n\n            curr = nextP;\n        }\n\n        return dummy->next;\n    }\n};","compare_result":"1111111111111111111","title_slug":"insertion-sort-list","has_notes":false}