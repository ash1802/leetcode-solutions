{"id":892520405,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1675671950,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/892520405/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if(!root->left && !root->right) return root;\n        if(root->val == val) return root;\n        else if(root->val > val) return searchBST(root->left, val);\n        else return searchBST(root->right, val);\n    }\n\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        TreeNode* parent = searchBST(root, val);\n        TreeNode* newNode = new TreeNode(val);\n\n        if(parent->val < val) parent->right = newNode;\n        else parent->left = newNode;\n        return root;\n    }\n};","compare_result":"11111100000000000000000000000000000","title_slug":"insert-into-a-binary-search-tree","has_notes":false}