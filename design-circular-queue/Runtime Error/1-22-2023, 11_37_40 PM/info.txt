{"id":883221151,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674410860,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/883221151/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"N/A","code":"class Node {\n    public: \n    int val;\n    Node* next;\n    Node(int val) {\n        this->val = val;\n        this->next = NULL;\n    }\n};\n\nclass MyCircularQueue {\n    Node* head;\n    Node* tail;\n    int currSize;\n    int maxSize;\npublic:\n    MyCircularQueue(int k) {\n        head = NULL;\n        tail = NULL;\n        currSize = 0;\n        maxSize = k;\n    }\n    \n    bool enQueue(int value) {\n        if(isFull()) return false;\n\n        Node* temp = new Node(value);\n\n        if(head == NULL) {\n            head = tail = temp;\n            tail->next = head;\n            currSize++;\n            return true;\n        }\n\n        else {\n            tail->next = temp;\n            tail = temp;\n            tail->next = head;\n            currSize++;\n            return true;\n        }   \n    }\n    \n    bool deQueue() {\n        if(isEmpty()) return false;\n\n        Node* del = head;\n\n        if(head->next == head) {\n            head = NULL;\n            tail = NULL;\n            delete del;\n            currSize--;\n            return true;\n        }\n\n        else {\n            head = head->next;\n            tail->next = head;\n            delete del;\n            currSize--;\n            return true;\n        }\n    }\n    \n    int Front() {\n        return head->val;\n    }\n    \n    int Rear() {\n        return tail->val;\n    }\n    \n    bool isEmpty() {\n        return currSize == 0;\n    }\n    \n    bool isFull() {\n        return currSize == maxSize;\n    }\n};\n\n/**\n * Your MyCircularQueue object will be instantiated and called as such:\n * MyCircularQueue* obj = new MyCircularQueue(k);\n * bool param_1 = obj->enQueue(value);\n * bool param_2 = obj->deQueue();\n * int param_3 = obj->Front();\n * int param_4 = obj->Rear();\n * bool param_5 = obj->isEmpty();\n * bool param_6 = obj->isFull();\n */","compare_result":"1000000000000000000000000000000000000000000000000000000000","title_slug":"design-circular-queue","has_notes":false}