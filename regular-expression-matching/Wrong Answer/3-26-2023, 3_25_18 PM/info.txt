{"id":922352474,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1679824518,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/922352474/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"N/A","code":"class Solution {\npublic:\n    bool allStars(string s, int end) {\n        for(int i=1; i<=end; i++) {\n            if(s[i-1] != '*') return false;\n        }\n        return true;\n    }\n\n    bool isMatch(string s, string p) {\n        int n = p.size();\n        int m = s.size();\n        // tabulation solution here\n        vector<vector<bool>> dp(n+1, vector<bool>(m+1, false));\n        // base cases\n        dp[0][0] = true;\n        for(int j=1; j<=m; j++) dp[0][j] = false;\n        for(int i=1; i<=n; i++) dp[i][0] = allStars(p, i);\n\n        for(int i=1; i<=n; i++) {\n            for(int j=1; j<=m; j++) {\n                if(p[i-1] == s[j-1] || p[i-1] == '.') {\n                    dp[i][j] = dp[i-1][j-1];\n                }\n                else {\n                    if(p[i-1] == '*') dp[i][j] = dp[i][j-1] || dp[i-1][j];\n                    else dp[i][j] = false;  \n                }\n            }\n        }\n\n        return dp[n][m];\n    }\n};","compare_result":"111001111111111110001111010110001101111111111111111111110111011111111111111111111111011111111110111111111111111111111111110111111111011111111111111111111010110111001011101101110111110101111111011110101110111110111111111111110110111011011110111001111110100111101011011010110111011101111111011111111110111100111011011111111111111011101011111001111100101101","title_slug":"regular-expression-matching","has_notes":false}