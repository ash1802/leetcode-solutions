{"id":870145629,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1672716244,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/870145629/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"N/A","code":"class Solution {\npublic:\n    int findMinPos(vector<int> nums) {\n        int mini = INT_MAX;\n        int idx = -1;\n        for(int i=0; i<nums.size(); i++) {\n            if(nums[i] < mini) {\n                mini = nums[i];\n                idx = i;\n            }\n        }\n\n        return idx;\n    }\n\n    bool search(vector<int>& nums, int target) {\n        int pivot = findMinPos(nums);\n        int n = nums.size();\n        int low, high;\n\n        if(target >= nums[pivot] && target < nums[n-1]) {\n            low = pivot; high = n-1;\n        }\n\n        else {\n            low = 0; high = pivot-1;\n        }\n\n        while(low < high) {\n            int mid = low + (high-low)/2;\n            if(nums[mid] == target) return true;\n            else if(nums[mid] > target) high = mid-1;\n            else low = mid+1;\n        }\n\n        return false;\n    }\n};","compare_result":"1110000001101111011010110011110110101101011011101101110111101011110110101101011010111101101011010110101101010101011010010011111100011110100100001010010100101100101111111101101111011110111000110111101011101101101110100010011011011111111011111101010011101110110101111111111100111111","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false}