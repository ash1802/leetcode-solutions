{"id":960630028,"lang":"cpp","lang_name":"C++","time":"2 days, 14 hours","timestamp":1685499280,"status":10,"status_display":"Accepted","runtime":"179 ms","url":"/submissions/detail/960630028/","is_pending":"Not Pending","title":"Design Underground System","memory":"60 MB","code":"class UndergroundSystem {\n    unordered_map<int, pair<string, int>> cust; \n    unordered_map<string, vector<int>> total;\npublic:\n    UndergroundSystem() {\n        \n    }\n    \n    void checkIn(int id, string stationName, int t) {\n        cust[id] = make_pair(stationName, t);\n    }\n    \n    void checkOut(int id, string stationName, int t) {\n        int checkInTime = cust[id].second;\n        string str = cust[id].first + \"_\"  + stationName;\n        total[str].push_back(t - checkInTime);\n    }\n    \n    double getAverageTime(string startStation, string endStation) {\n        string str = startStation + \"_\"  + endStation;\n        double sum = 0.0;\n        double size = total[str].size();\n        for(int i=0; i<size; i++) sum += total[str][i];\n        return sum / size;\n    }\n};\n\n/**\n * Your UndergroundSystem object will be instantiated and called as such:\n * UndergroundSystem* obj = new UndergroundSystem();\n * obj->checkIn(id,stationName,t);\n * obj->checkOut(id,stationName,t);\n * double param_3 = obj->getAverageTime(startStation,endStation);\n */","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"design-underground-system","has_notes":false}