{"id":895263162,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1676023905,"status":10,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/895263162/","is_pending":"Not Pending","title":"Maximum Sum BST in Binary Tree","memory":"103.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Node {\n    public:\n    int maxi;\n    int mini;\n    bool isBST;\n    int sum;\n};\n\nclass Solution {\npublic:\n    Node solve(TreeNode* root, int& ans) {\n        if(root == NULL) {\n            return {INT_MIN, INT_MAX, true, 0};\n        }\n\n        Node left = solve(root->left, ans);\n        Node right = solve(root->right, ans);\n\n        Node curr;\n\n        curr.sum = left.sum + right.sum + root->val;\n        curr.maxi = max(root->val, right.maxi);\n        curr.mini = min(root->val, left.mini);\n\n        if(left.isBST && right.isBST && (root->val > left.maxi && root->val < right.mini)) curr.isBST = true;\n        else curr.isBST = false;\n\n        if(curr.isBST) ans = max(ans, curr.sum);\n        return curr;\n    }\n\n    int maxSumBST(TreeNode* root) {\n        int maxSum = 0;\n        Node temp = solve(root, maxSum);\n        return maxSum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-bst-in-binary-tree","has_notes":false}