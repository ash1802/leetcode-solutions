{"id":875441175,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1673356438,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/875441175/","is_pending":"Not Pending","title":"Rotate List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(head == NULL) return NULL;\n\n        ListNode* tail = head;\n        int len = 1;\n\n        while(tail->next != NULL) {\n            len++;\n            tail = tail->next;\n        }\n\n        tail->next = head;\n    \n        int pos = len - (k%len);\n        for(int i=0; i<pos; i++) tail = tail->next;\n        \n        head = tail->next; \n        tail->next = NULL;\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false}