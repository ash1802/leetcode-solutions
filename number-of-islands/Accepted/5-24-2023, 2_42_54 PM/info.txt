{"id":956340645,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1684919574,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/956340645/","is_pending":"Not Pending","title":"Number of Islands","memory":"18.5 MB","code":"class Solution {\npublic:\n    void bfs(vector<vector<char>>& grid, int i, int j) {\n        queue<pair<int,int>> q;\n        grid[i][j] = '2';\n        q.push({i,j});\n        vector<pair<int, int>> dir{{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n\n        while(!q.empty()) {\n            auto node = q.front();\n            q.pop();\n\n            for(auto d: dir) {\n                int row = node.first + d.first;\n                int col = node.second + d.second;\n\n                if(row >= 0 && row < grid.size() && col >= 0 && col < grid[0].size() && grid[row][col] == '1') {\n                    grid[row][col] = '2';\n                    q.push({row, col});\n                }\n            }\n        }\n    }\n\n    int numIslands(vector<vector<char>>& grid) {\n        if(grid.empty()) return 0;\n\n        int count = 0;\n\n        for(int i=0; i<grid.size(); i++) {\n            for(int j=0; j<grid[0].size(); j++) {\n                if(grid[i][j] == '1') {\n                    count++;\n                    bfs(grid, i, j);\n                }\n            }\n        }\n\n        return count;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false}