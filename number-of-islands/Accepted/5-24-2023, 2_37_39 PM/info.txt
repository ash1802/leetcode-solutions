{"id":956338265,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1684919259,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/956338265/","is_pending":"Not Pending","title":"Number of Islands","memory":"18.1 MB","code":"class Solution {\npublic:\n    //bfs + iterative\n    //time: o(row * column)\n    //space: o(column)\n    int numIslands(vector<vector<char>>& grid) {\n        if(grid.empty())\n            return 0;\n        \n        int count_of_islands = 0;\n        for(int row = 0; row < grid.size(); ++row) {\n            for(int col = 0; col < grid[0].size(); ++col) {\n                if(grid[row][col] == '1') {\n                    ++count_of_islands;\n                    std::queue<pair<int, int>> bfs_que;//<row, column>\n                    grid[row][col] = '2';\n                    bfs_que.push(make_pair(row, col));\n                    while(!bfs_que.empty()) {\n                        std::pair<int, int> visited_node = bfs_que.front();\n                        bfs_que.pop();\n                        for(auto d : dir) {\n                            int next_row = visited_node.first + d.first;\n                            int next_col = visited_node.second + d.second;\n                            if(next_row >= 0 && next_row < grid.size() && next_col >= 0 && next_col < grid[0].size() && grid[next_row][next_col] == '1') {\n                                grid[next_row][next_col] = '2';\n                                bfs_que.push(make_pair(next_row, next_col));\n                            }\n                            \n                        }\n                    }\n                }   \n            }  \n        }\n        return count_of_islands;\n    }\n\nprivate:\n    vector<pair<int, int>> dir{{1, 0}, {-1, 0}, {0, 1}, {0, -1}};//<row, column>\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false}