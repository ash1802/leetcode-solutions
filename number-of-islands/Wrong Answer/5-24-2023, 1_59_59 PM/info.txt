{"id":956321057,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1684916999,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/956321057/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution {\npublic:\n    void bfs(int n, vector<int> adj[], vector<int>& vis, int src) {\n        queue<int> q;\n        q.push(src);\n\n        while(!q.empty()) {\n            int node = q.front();\n            q.pop();\n\n            vis[node] = 1;\n\n            for(auto neigh : adj[node]) {\n                if(!vis[neigh]) {\n                    q.push(neigh);\n                    vis[neigh] = 1;\n                }\n            }\n        }\n    }\n\n    int numIslands(vector<vector<char>>& grid) {\n        int n = grid.size();\n        vector<int> adj[n];\n\n        for(int i=0; i<n; i++) {\n            for(int j=0; j<n; j++) {\n                if(grid[i][j] == '1' && i != j) {\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n\n        int ans = 0;\n        vector<int> vis(n+1, 0);\n\n        for(int i=0; i<n; i++) {\n            if(!vis[i]) {\n                ans++;\n                bfs(n, adj, vis, i);\n            }\n        }\n\n        return ans;\n    }\n};","compare_result":"1110110000000000000000000000000000000000000000000","title_slug":"number-of-islands","has_notes":false}