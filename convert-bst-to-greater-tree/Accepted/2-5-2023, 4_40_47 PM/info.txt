{"id":891966810,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1675595447,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/891966810/","is_pending":"Not Pending","title":"Convert BST to Greater Tree","memory":"33.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorderSum(TreeNode* root, int& sum) {\n        if(root == NULL) return;\n        inorderSum(root->left, sum);\n        sum += root->val;\n        inorderSum(root->right, sum);\n    }\n    \n    void update(TreeNode*& root, int& sum) {\n        if(root == NULL) return;\n        update(root->left, sum);\n        int curr = root->val;\n        root->val = sum;\n        sum -= curr;\n        update(root->right, sum);\n    }\n\n    TreeNode* convertBST(TreeNode* root) {\n        int sum = 0;\n        inorderSum(root, sum);\n        update(root, sum);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-bst-to-greater-tree","has_notes":false}