{"id":886361161,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1674836492,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/886361161/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"28.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    TreeNode* buildTree(ListNode* head, ListNode* tail) {\n        if(head == tail) return NULL;\n\n        ListNode* temp = head;\n        ListNode* mid = head;\n\n        while(temp != tail && temp->next != tail) {\n            temp = temp->next->next;\n            mid = mid->next;\n        }\n\n        TreeNode* root = new TreeNode(mid->val);\n        root->left = buildTree(head,mid);\n        root->right = buildTree(mid->next,tail);\n        return root;\n    }\n\npublic:\n    TreeNode* sortedListToBST(ListNode* head) {\n        TreeNode* root = buildTree(head, NULL);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree","has_notes":false}