{"id":868927116,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1672556505,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/868927116/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"25.1 MB","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int n = nums.size();\n        int prefix = 1;\n\n        int zeros = 0;\n\n        for(int i=0; i<n && zeros <= 1; i++) {\n            if(nums[i] == 0) zeros++;\n            else prefix *= nums[i];\n        }\n\n        vector<int> ans;\n\n        if(zeros > 1) {\n            vector<int> res(n,0);\n            return res;\n        }\n\n        else if(zeros == 1) {\n            for(int i=0; i<n; i++) {\n                if(nums[i] == 0) ans.push_back(prefix);\n                else ans.push_back(0);\n            }\n            return ans;\n        }\n\n        else {\n            for(int i=0; i<n; i++) {\n                ans.push_back(prefix/nums[i]);\n            }\n            return ans;\n        }\n    }\n};","compare_result":"1111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false}