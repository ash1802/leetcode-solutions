{"id":862461318,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1671509704,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/862461318/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"6.7 MB","code":"class MyStack {\n    queue<int> first, second;\npublic:\n    MyStack() {\n        \n    }\n    \n    void push(int x) {\n        if(first.empty()) {\n            first.push(x);\n            return;\n        }\n\n        while(!first.empty()) {\n            second.push(first.front());\n            first.pop();\n        }\n        first.push(x);\n        while(!second.empty()) {\n            first.push(second.front());\n            second.pop();\n        }\n    }\n    \n    int pop() {\n        if(first.empty()) return -1;\n\n        int ele = first.front();\n        first.pop();\n        return ele;\n    }\n    \n    int top() {\n        return first.front();\n    }\n    \n    bool empty() {\n        return first.empty();\n    }\n};\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack* obj = new MyStack();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->top();\n * bool param_4 = obj->empty();\n */","compare_result":"11111111111111111","title_slug":"implement-stack-using-queues","has_notes":false}