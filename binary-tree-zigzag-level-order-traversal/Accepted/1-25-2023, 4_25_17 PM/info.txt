{"id":884957991,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674644117,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/884957991/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> ans;\n        queue<TreeNode*> q;\n        \n        if(root == NULL) return ans;\n\n        q.push(root);\n        q.push(NULL);\n        bool ltr = true;\n        vector<int> level;\n\n        while(!q.empty()) {\n            TreeNode* temp = q.front();\n            q.pop();\n\n            if(temp == NULL) {\n                if(!ltr) reverse(level.begin(), level.end());\n                ans.push_back(level);\n                ltr = !ltr;\n                level.clear();\n                if(!q.empty()) q.push(NULL);\n            }\n\n            else {\n                level.push_back(temp->val);\n                if(temp->left) q.push(temp->left);\n                if(temp->right) q.push(temp->right);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false}