{"id":884961010,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674644596,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/884961010/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"11.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int> > zigzagLevelOrder(TreeNode* root) {\n    vector<vector<int> > result;\n    \n    if (root == NULL) return result;\n\n    queue<TreeNode*> nodesQueue;\n    nodesQueue.push(root);\n    bool leftToRight = true;\n\n    while ( !nodesQueue.empty()) {\n        int size = nodesQueue.size();\n        vector<int> row(size);\n        for (int i = 0; i < size; i++) {\n            TreeNode* node = nodesQueue.front();\n            nodesQueue.pop();\n\n            // find position to fill node's value\n            int index = (leftToRight) ? i : (size - 1 - i);\n\n            row[index] = node->val;\n            if (node->left) {\n                nodesQueue.push(node->left);\n            }\n            if (node->right) {\n                nodesQueue.push(node->right);\n            }\n        }\n        // after this level\n        leftToRight = !leftToRight;\n        result.push_back(row);\n    }\n    return result;\n}\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false}