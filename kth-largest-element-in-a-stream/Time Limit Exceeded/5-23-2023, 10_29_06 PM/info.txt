{"id":955928100,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1684861146,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/955928100/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"N/A","code":"class KthLargest {\n    priority_queue<int> pq;\n    int k;\npublic:\n    KthLargest(int k, vector<int>& nums) {\n        this->k = k;\n        for(int num: nums) pq.push(num);\n    }\n    \n    int add(int val) {\n        pq.push(val);\n        \n        stack<int> st;\n        int i = 0;\n        while(i < k-1) {\n            st.push(pq.top());\n            pq.pop();\n            i++;\n        }\n\n        int ans = pq.top();\n        \n        while(!st.empty()) {\n            pq.push(st.top());\n            st.pop();\n        }\n\n        return ans;\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111110","title_slug":"kth-largest-element-in-a-stream","has_notes":false}