{"id":868081950,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1672408327,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/868081950/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"class Solution {\npublic:\n    bool isValid(vector<int> piles, int h, int bph) {\n        int n = piles.size();\n        int i = 0;\n        int operations = 0;\n\n        while(operations <= h && i < n) {\n            if(piles[i] > bph) {\n                piles[i] -= bph;\n                operations++;\n            }\n\n            else {\n                piles[i] = 0;\n                i++;\n                operations++;\n            }\n        }\n\n        return operations <= h;\n    }\n    \n\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int low = 1;\n        int high = *max_element(piles.begin(), piles.end());\n        int ans = 0;\n\n        while(low <= high) {\n            int mid = (low + high) / 2;\n\n            if(isValid(piles,h,mid)) {\n                ans = mid;\n                high = mid-1;\n            }\n\n            else low = mid+1;\n        }\n\n        return ans;\n    }\n};","compare_result":"11110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"koko-eating-bananas","has_notes":false}