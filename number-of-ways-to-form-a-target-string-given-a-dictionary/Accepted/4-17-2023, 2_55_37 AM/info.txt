{"id":934928749,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1681680337,"status":10,"status_display":"Accepted","runtime":"314 ms","url":"/submissions/detail/934928749/","is_pending":"Not Pending","title":"Number of Ways to Form a Target String Given a Dictionary","memory":"53.8 MB","code":"class Solution {\npublic:\n    long long MOD = 1000000007;\n    int solve(vector<vector<int>>&freq, string& target, vector<vector<int>>& dp, int colIdx, int targetIdx)\n    {\n        //if target is complete, then irrespective of colIdx the formation is 'VALID'\n        if (targetIdx == target.size()) return 1; \n        if (colIdx == freq.size()) //will come here only when (targetIdx != target.size())\n            return 0;  //means target is not complete and still the string choices are over\n                       //so 'INVALID'\n\n        if (dp[colIdx][targetIdx] != -1) return dp[colIdx][targetIdx];\n        char targetCh = target[targetIdx];\n        int notPickWays = solve(freq, target, dp, colIdx + 1, targetIdx);\n        //===================================================================\n        int pickWays = 0;\n        if (freq[colIdx][targetCh - 'a'] != 0)\n        {\n            int currWays = freq[colIdx][targetCh - 'a'];\n            int nextWays = solve(freq, target, dp, colIdx + 1, targetIdx + 1);\n            pickWays = (currWays * (long long)nextWays) % MOD;\n        }\n        //====================================================================\n        return dp[colIdx][targetIdx] = ((pickWays + (long long)notPickWays) % MOD);\n        \n    }\n    int numWays(vector<string>& words, string target) \n    {\n        int m = words.size(), n = words[0].size();\n        vector<vector<int>>freq(n, vector<int>(26, 0));\n        for (int i = 0; i < m; i++)\n        {\n            for (int j = 0; j < n; j++)\n            {\n                char ch = words[i][j];\n                freq[j][ch - 'a']++; //freq of 'ch' in jth col\n            }\n        }\n        vector<vector<int>>dp(n, vector<int>(target.size(), -1));\n        int ans = solve(freq, target, dp, 0, 0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-to-form-a-target-string-given-a-dictionary","has_notes":false}