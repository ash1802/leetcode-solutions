{"id":937483654,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1682092062,"status":10,"status_display":"Accepted","runtime":"134 ms","url":"/submissions/detail/937483654/","is_pending":"Not Pending","title":"Profitable Schemes","memory":"9.1 MB","code":"class Solution {\npublic:\n    int mod=1e9+7;\n    int profitableSchemes(int n, int minProfit, vector<int>& group, vector<int>& profit) {\n        vector<vector<int>> dp(n + 1, vector<int>(minProfit + 1, 0));\n        dp[0][0] = 1;\n        for (int k = 1; k <= group.size(); k++) {\n            int g = group[k - 1];\n            int p = profit[k - 1];\n            for (int i = n; i >= g; i--) {\n                for (int j = minProfit; j >= 0; j--) {\n                    dp[i][j] = (dp[i][j] + dp[i - g][max(0, j - p)]) % mod;\n                }\n            }\n        }\n        int sum = 0;\n        for (int i = 0; i <= n; i++) {\n            sum = (sum + dp[i][minProfit]) % mod;\n        }\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"profitable-schemes","has_notes":false}