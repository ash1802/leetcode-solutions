{"id":858707886,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1670861412,"status":10,"status_display":"Accepted","runtime":"157 ms","url":"/submissions/detail/858707886/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"21.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        unordered_map<ListNode*, bool> isVisited;\n\n        ListNode* tempA = headA;\n        while(tempA != NULL) {\n            isVisited[tempA] = true;\n            tempA = tempA->next;\n        }\n\n        ListNode *tempB = headB;\n        while(tempB != NULL) {\n            if(isVisited[tempB]) return tempB;\n            tempB = tempB->next;\n        }\n\n        return NULL;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false}