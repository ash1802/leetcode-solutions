{"id":864581263,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1671860860,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/864581263/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& arr, int k) {\n        int n = arr.size();\n        unordered_map<int,int> mp;\n        int sum = 0;\n\n        for(int i=0; i<n; i++) {\n            sum += arr[i];\n            int modSum = sum % k;\n\n            if(sum % k == 0 && i+1 >= 2) return true;\n\n            if(mp.find((sum-k) % k) != mp.end()) {\n                int len = i - mp[(sum-k)%k] + 1;\n                if(len >= 2) return true;\n            }\n\n            mp[sum % k] = i;\n        }\n\n        return false;\n    }\n};","compare_result":"1111111111111111111001100111111111111111111111111111111111111111111111111100111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}