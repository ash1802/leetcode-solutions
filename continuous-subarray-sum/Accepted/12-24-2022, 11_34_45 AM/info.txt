{"id":864587661,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1671861885,"status":10,"status_display":"Accepted","runtime":"254 ms","url":"/submissions/detail/864587661/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"113.9 MB","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& arr, int k) {\n        int n = arr.size();\n        if(n < 2) return false;\n\n        unordered_map<int,int> mp;\n        int sum = 0;\n        mp[sum] = -1;\n\n        for(int i=0; i<n; i++) {\n            sum += arr[i];\n            if(k != 0) sum = sum % k;\n\n            if(mp.find(sum) != mp.end()) {\n                if(i - mp[sum] > 1) return true;\n            }\n\n            else mp[sum] = i;\n        }\n\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}