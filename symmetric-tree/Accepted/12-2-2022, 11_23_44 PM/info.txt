{"id":853521490,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1670003624,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/853521490/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        if(p == NULL && q == NULL) return true;\n        if((p != NULL && q == NULL) || (p == NULL && q != NULL)) return false;\n        return (p->val==q->val) && isSameTree(p->left, q->right) && isSameTree(p->right,q->left);\n    }\n\n    bool isSymmetric(TreeNode* root) {\n       return isSameTree(root->left, root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}