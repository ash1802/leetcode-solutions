{"id":910648768,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1678170947,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/910648768/","is_pending":"Not Pending","title":"House Robber","memory":"7.6 MB","code":"class Solution {\npublic:\n    int solve(vector<int>& nums, int index, vector<int>& dp) {\n        if(index < 0) return 0;\n        if(index == 0) return nums[0];\n        if(dp[index] != -1) return dp[index];\n\n        int pick = nums[index] + solve(nums, index-2, dp);\n        int dontPick = solve(nums, index-1, dp);\n\n        return dp[index] = max(pick, dontPick);\n    }\n\n    int rob(vector<int>& nums) {\n        int n = nums.size();\n        // vector<int> dp(n+1, 0);\n        // dp[0] = nums[0];\n\n        int curr;\n        int prev1 = nums[0];\n        int prev2 = 0;\n\n        for(int i=1; i<n; i++) {\n            int pick = nums[i];\n            if(i > 1) pick += prev2;\n\n            int dontPick = prev1;\n            curr = max(pick, dontPick);\n            \n            prev2 = prev1;\n            prev1 = curr;\n        }\n\n        return prev1;\n        // return solve(nums, n-1, dp);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber","has_notes":false}