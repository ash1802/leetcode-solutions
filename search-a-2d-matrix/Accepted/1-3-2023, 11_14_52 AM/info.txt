{"id":870219195,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1672724692,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/870219195/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"9.3 MB","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int m = matrix.size();\n        int n = matrix[0].size();\n\n        int low = 0;\n        int high = (m*n) - 1;\n\n        while(low <= high) {\n            int mid = low + (high-low)/2;\n            int ele = matrix[mid/n][mid%n];\n\n            cout << ele << mid << mid/n << mid%n << \" \";\n\n            if(ele == target) return true;\n            else if(ele < target) low = mid+1;\n            else high = mid-1;\n        }\n\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false}