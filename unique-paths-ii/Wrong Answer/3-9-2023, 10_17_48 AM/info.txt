{"id":911852010,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1678337268,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/911852010/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution {\npublic:\n    int solve(vector<vector<int>>& obstacleGrid, int i, int j) {\n        if(i == 0 && j == 0) return 1;\n        if(i < 0 || j < 0) return 0;\n\n        // we can proceed only when the current cell does not have any obstacle\n        if(obstacleGrid[i][j] == 0) {\n            return solve(obstacleGrid, i, j-1) + solve(obstacleGrid, i-1, j);\n        }\n        \n        else return 0;\n    }\n\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        return solve(obstacleGrid, m-1, n-1);\n    }\n};","compare_result":"11110110111011110111111111011000000000000","title_slug":"unique-paths-ii","has_notes":false}