{"id":956919521,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1684998261,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/956919521/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\npublic:\n    void bfs(vector<vector<int>>& mat, int row, int col, vector<vector<int>>& vis) {\n        int n = mat.size();\n        int m = mat[0].size();\n        \n        vis[row][col] = 1;\n        queue<pair<int,int>> q;\n        q.push({row, col});\n\n        vector<pair<int,int>> dir{{-1,0}, {0, 1}, {1, 0}, {0, -1}};\n        while(!q.empty()) {\n            int r = q.front().first;\n            int c = q.front().second;\n            q.pop();\n\n            for(auto d : dir) {\n                int newr = r + d.first;\n                int newc = c + d.second;\n\n                if(newr >= 0 && newr < n && newc >= 0 && newc < m && !vis[newr][newc] && mat[newr][newc] == 1) {\n                    vis[newr][newc] = 1;\n                    mat[newr][newc] += mat[r][c];\n                }\n            }\n        }\n    }\n\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        int n = mat.size();\n        int m = mat[0].size();\n\n        vector<vector<int>> vis(n, vector<int>(m, 0));\n\n        for(int i=0; i<n; i++) {\n            for(int j=0; j<m; j++) {\n                if(mat[i][j] == 1) {\n                    bfs(mat, i, j, vis);\n                }\n            }\n        }\n\n        return mat;\n    }\n};","compare_result":"11111100000000000000000000000000000000000000000000","title_slug":"01-matrix","has_notes":false}