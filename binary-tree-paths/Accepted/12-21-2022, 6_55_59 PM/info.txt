{"id":863236416,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1671629159,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/863236416/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"13 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void findPaths(vector<string>& paths, TreeNode* root, string path) {\n        if(!root->left && !root->right) {\n            paths.push_back(path);\n            return;\n        }\n\n        if(root->left) findPaths(paths, root->left, path + \"->\" + to_string(root->left->val));\n        if(root->right) findPaths(paths, root->right, path + \"->\" + to_string(root->right->val));\n    }\n\n    vector<string> binaryTreePaths(TreeNode* root) {\n        vector<string> paths;\n        if(!root) return paths;\n        \n        findPaths(paths, root, to_string(root->val));\n        return paths;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false}