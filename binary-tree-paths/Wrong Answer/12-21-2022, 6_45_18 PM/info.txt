{"id":863232101,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1671628518,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/863232101/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void findPaths(TreeNode* root, string& ans, vector<string>& paths) {\n        if(root == NULL) return;\n\n        ans.push_back(root->val + '0');\n        ans.push_back('-');\n        ans.push_back('>');\n        if(root->left == NULL && root->right == NULL) {\n            string temp = ans;\n            temp.pop_back();\n            temp.pop_back();\n            paths.push_back(temp);\n            ans.pop_back();\n            ans.pop_back();\n            ans.pop_back();\n            return;\n        }\n        findPaths(root->left, ans, paths);\n        findPaths(root->right, ans, paths);\n        ans.pop_back(); \n        ans.pop_back(); \n        ans.pop_back(); \n    }\n\n    vector<string> binaryTreePaths(TreeNode* root) {\n        vector<string> paths;\n        string ans = \"\";\n        findPaths(root,ans,paths);\n        return paths;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"binary-tree-paths","has_notes":false}