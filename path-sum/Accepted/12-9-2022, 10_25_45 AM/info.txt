{"id":856960947,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1670561745,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/856960947/","is_pending":"Not Pending","title":"Path Sum","memory":"22.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void traversal(TreeNode* root, int target, set<int>& ans, int& sum) {\n        if(root == NULL) return;\n\n        sum += root->val;\n        if(root->left == NULL && root->right == NULL) ans.insert(sum);\n        traversal(root->left, target, ans, sum);\n        traversal(root->right, target, ans, sum);\n        sum -= root->val;\n    }\n\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        set<int> ans;\n        int sum = 0;\n        traversal(root, targetSum, ans, sum);\n        for(int num : ans) cout << num << \" \";\n        if(ans.find(targetSum) == ans.end()) return false;\n        else return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false}