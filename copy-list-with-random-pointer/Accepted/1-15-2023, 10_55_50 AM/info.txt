{"id":878417787,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1673760350,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/878417787/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.3 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        unordered_map<Node*, Node*> mp;\n\n        Node *clone = new Node(-1);\n        Node *tail = clone;\n\n        Node *temp = head;\n        while(temp != NULL) {\n            Node *ptr = new Node(temp->val);\n            mp[temp] = ptr;\n            tail->next = ptr;\n            tail = ptr;\n            temp = temp->next;\n        }\n\n        clone = clone->next;\n        temp = clone;\n        Node *first = head;\n\n        while(temp != NULL) {\n            temp->random = mp[first->random];\n            temp = temp->next;\n            first = first->next;\n        }\n\n        return clone;\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer","has_notes":false}