{"id":882337840,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674300667,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/882337840/","is_pending":"Not Pending","title":"Evaluate Reverse Polish Notation","memory":"12 MB","code":"class Solution {\npublic:\n    bool isOperator(string s) {\n        return (s == \"+\" || s == \"-\" || s == \"*\" || s == \"/\");\n    }\n\n    int evalRPN(vector<string>& tokens) {\n        stack<int> st;\n\n        for(int i=0; i<tokens.size(); i++) {\n            if(!isOperator(tokens[i])) {\n                cout << stoi(tokens[i]) << \" \";\n                st.push(stoi(tokens[i]));\n            }\n            else {\n                int op1 = st.top();\n                st.pop();\n                int op2 = st.top();\n                st.pop();\n                int res = 0;\n                switch(tokens[i][0]) {\n                    case '+' : res = op2 + op1; break;\n                    case '-' : res = op2 - op1; break;\n                    case '*' : res = op2 * op1; break;\n                    case '/' : res = op2 / op1; break;\n                }\n                st.push(res);\n            }\n        }\n\n        return st.top();\n    }\n};","compare_result":"111111111111111111111","title_slug":"evaluate-reverse-polish-notation","has_notes":false}