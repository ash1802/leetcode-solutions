{"id":886746295,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1674897945,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/886746295/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"32.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n\npublic:\n    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {\n        if(root1 == NULL || root2 == NULL) return root1 ? root1 : root2;\n        TreeNode* merged = new TreeNode(0);\n        merged->val = root2->val + root1->val;\n        merged->left = mergeTrees(root1->left, root2->left);\n        merged->right = mergeTrees(root1->right, root2->right);\n        return merged;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees","has_notes":false}