{"id":885481647,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674714526,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/885481647/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"9.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void findNums(TreeNode* root, int num, int& ans) {\n        if(root == NULL) return;\n\n        if(!root->left && !root->right) {\n            num = num*10 + root->val;\n            ans += num;\n            return;\n        }\n\n        num = num*10 + root->val;\n        findNums(root->left, num, ans);\n        findNums(root->right, num, ans);\n    }\npublic:\n    int sumNumbers(TreeNode* root) {\n        if(root == NULL) return 0;\n        \n        int num = 0;\n        int ans = 0;\n        findNums(root,num,ans);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false}