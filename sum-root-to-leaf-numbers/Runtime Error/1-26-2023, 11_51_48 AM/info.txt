{"id":885478000,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1674714108,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/885478000/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void findNums(TreeNode* root, string num, vector<int>& nums) {\n        if(!root->left && !root->right) {\n            num = num + to_string(root->val);\n            cout << num << \", \";\n            nums.push_back(stoi(num));\n            return;\n        }\n\n        num = num + to_string(root->val);\n        findNums(root->left, num, nums);\n        findNums(root->right, num, nums);\n    }\npublic:\n    int sumNumbers(TreeNode* root) {\n        if(root == NULL) return 0;\n        \n        string num = \"\";\n        vector<int> nums;\n        findNums(root,num,nums);\n\n        int sum = 0;\n        for(int n: nums) sum = sum+n;\n        return sum;\n    }\n};","compare_result":"111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"sum-root-to-leaf-numbers","has_notes":false}