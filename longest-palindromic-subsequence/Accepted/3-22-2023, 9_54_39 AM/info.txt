{"id":919896150,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1679459079,"status":10,"status_display":"Accepted","runtime":"138 ms","url":"/submissions/detail/919896150/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"6.7 MB","code":"class Solution {\npublic:\n    int lcs(string s1, string s2) {\n        \n        int n=s1.size();\n        int m=s2.size();\n\n        vector<int> prev(m+1,0), cur(m+1,0);\n        \n        // Base Case is covered as we have initialized the prev and cur to 0.\n        \n        for(int ind1=1;ind1<=n;ind1++){\n            for(int ind2=1;ind2<=m;ind2++){\n                if(s1[ind1-1]==s2[ind2-1])\n                    cur[ind2] = 1 + prev[ind2-1];\n                else\n                    cur[ind2] = 0 + max(prev[ind2],cur[ind2-1]);\n            }\n            prev= cur;\n        }\n        \n        return prev[m];\n    }\n\n    int longestPalindromeSubseq(string s) {\n        string t = s;\n        reverse(s.begin(),s.end());\n        return lcs(s,t);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false}