{"id":904459752,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1677295785,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/904459752/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"class MedianFinder {\n    vector<int> nums;\npublic:\n    MedianFinder() {}    \n\n    void addNum(int num) {\n        nums.push_back(num);\n    }\n    \n    double findMedian() {\n        int n = nums.size();\n        if(n == 1) return nums[0];\n        if(n == 2) return (double)(nums[0] + nums[1]) / 2.0;\n\n        int pos = n / 2;\n        if(n % 2 != 0) return nums[pos];\n        double ans = (double)(nums[pos] + nums[pos + 1]) / (double)2;\n        return ans;\n    }\n};\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder* obj = new MedianFinder();\n * obj->addNum(num);\n * double param_2 = obj->findMedian();\n */","compare_result":"111100000000000000001","title_slug":"find-median-from-data-stream","has_notes":false}