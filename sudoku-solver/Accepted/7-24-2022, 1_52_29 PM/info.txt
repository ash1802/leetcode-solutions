{"id":755266788,"lang":"cpp","lang_name":"C++","time":"10 months, 1 week","timestamp":1658650949,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/755266788/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"6.4 MB","code":"class Solution {\npublic:\n    bool isSafe(vector<vector<char>>& board, int r, int c, char ch) {\n        for(int i=0; i<9; i++) {\n            if(board[i][c] == ch) return false;\n            if(board[r][i] == ch) return false;\n            if(board[3 * (r/3) + i / 3][3 * (c/3) + i % 3] == ch) return false;\n        }\n        return true;\n    }\n    \n    \n    bool solve(vector<vector<char>>& board) {\n        for(int i=0; i<board.size(); i++) {\n            for(int j=0; j<board[0].size(); j++) {\n                if(board[i][j] == '.') {\n                    for(char c='1'; c <= '9'; c++) {\n                        if(isSafe(board,i,j,c)) {\n                            board[i][j] = c;\n                            if(solve(board) == true) return true;\n                            else board[i][j] = '.';\n                        }\n                    }\n                    \n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    \n    void solveSudoku(vector<vector<char>>& board) {\n        solve(board);\n    }\n};","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false}